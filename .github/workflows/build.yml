name: Build Next.js Project

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: Deploy to Vercel
        required: true
        default: true
        type: boolean
      os:
        description: Operating system to build on
        required: true
        default: Windows
        type: choice
        options:
          - Ubuntu
          - Windows
          - macOS
      debug:
        description: Enable Vercel debug mode
        required: false
        default: true
        type: boolean

  push:
    branches: [master, preview]
    paths:
      - 'src/**'
      - 'public/**'
      - 'next.config.ts'
      - 'package*.json'
      - 'tsconfig.json'
      - 'tailwind.config.js'
      - 'postcss.config.js'

permissions:
  contents: write

jobs:
  build:
    concurrency: vercel-ci/${{ github.ref_name }}
    runs-on: ${{ inputs.os || 'Windows' }}-latest
    env:
      NODE_VERSION: 22.x
      VERCEL_ENV: ${{ (github.event_name == 'push' && github.ref_name == 'master') && 'production' || 'preview' }}
      VERCEL_TARGET_ENV: ${{ (github.event_name == 'push' && github.ref_name == 'master') && 'production' || 'preview' }}
      VERCEL_PREVIEW_DOMAIN: wattbreaker-preview.vercel.app
      PROD: ${{ (github.event_name == 'push' && github.ref_name == 'master') && '--prod' || '' }}
      DEBUG: ${{ inputs.debug == true && '--debug' || '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Setup Vercel CLI
        run: npm install -g vercel
      - name: Link Vercel project
        run: vercel link ${{ env.DEBUG }} --token ${{ secrets.VERCEL_TOKEN }} --project ${{ secrets.VERCEL_PROJECT_NAME }} --yes
      - name: Pull Vercel project settings
        run: vercel pull ${{ env.DEBUG }} --token ${{ secrets.VERCEL_TOKEN }} --yes

      - name: Cache npm dependencies
        id: cache-npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-

      - name: Build project
        run: vercel build ${{ env.DEBUG }} ${{ env.PROD }} --token ${{ secrets.VERCEL_TOKEN }} --yes

      - name: Run tests
        run: npm test

      - name: Deploy to Vercel
        if: inputs.deploy == true
        run: |
          vercel deploy --prebuilt ${{ env.DEBUG }} ${{ env.PROD }} --token ${{ secrets.VERCEL_TOKEN }} --yes > deployment-url.txt
          echo "::notice title='Deployment URL'::$(cat deployment-url.txt)"
          [ $VERCEL_ENV = 'preview' ] && \
            vercel alias set $(cat deployment-url.txt) ${{ env.VERCEL_PREVIEW_DOMAIN }} ${{ env.DEBUG }} --token ${{ secrets.VERCEL_TOKEN }} --yes
        shell: bash
